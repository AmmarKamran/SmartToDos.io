{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/uzmashaheen/Desktop/Ayman and Ammar/SideProjects/ToDos.io/LearningMERNStack/todo-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n} // The two functions below are how we use a GET function from the backend \n// to display them onto our FRONT END BOOM ------------------------------------------------\n\n\n_c = App;\n\nconst List = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]); // makeAjax request\n\n  const fetchTodos = async () => {\n    //fetch request goes here:\n    const res = await fetch('http://localhost:3001/todos');\n    setTodos(await res.json()); // turn response into json\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  const items = todos.map(todo => /*#__PURE__*/_jsxDEV(Item, {\n    todo: todo\n  }, todo._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 35\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"ui relaxed divided list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"large github middle aligned icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          class: \"header\",\n          children: \"Semantic-Org/Semantic-UI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"description\",\n          children: \"Updated 10 mins ago\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"large github middle aligned icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          class: \"header\",\n          children: \"Semantic-Org/Semantic-UI-Docs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"description\",\n          children: \"Updated 22 mins ago\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"large github middle aligned icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          class: \"header\",\n          children: \"Semantic-Org/Semantic-UI-Meteor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"description\",\n          children: \"Updated 34 mins ago\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n\n_s(List, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c2 = List;\n\nconst Item = props => {\n  const {\n    done,\n    desc\n  } = props.todo;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: desc\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n}; //  ------------------------------------------------ ------------------------------------------------\n\n\n_c3 = Item;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"List\");\n$RefreshReg$(_c3, \"Item\");","map":{"version":3,"sources":["/Users/uzmashaheen/Desktop/Ayman and Ammar/SideProjects/ToDos.io/LearningMERNStack/todo-frontend/src/App.js"],"names":["React","useState","useEffect","App","List","todos","setTodos","fetchTodos","res","fetch","json","items","map","todo","_id","Item","props","done","desc"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,SAASC,GAAT,GAAe;AACb,sBACE;AAAA,2BACC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,C,CAGD;AACA;;;KAVSA,G;;AAWT,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC,CADiB,CAGjB;;AACA,QAAMM,UAAU,GAAG,YAAY;AAC7B;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACAH,IAAAA,QAAQ,CAAC,MAAME,GAAG,CAACE,IAAJ,EAAP,CAAR,CAH6B,CAGD;AAC7B,GAJD;;AAMAR,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMI,KAAK,GAAGN,KAAK,CAACO,GAAN,CAAUC,IAAI,iBAAI,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEA;AAAZ,KAAuBA,IAAI,CAACC,GAA5B;AAAA;AAAA;AAAA;AAAA,UAAlB,CAAd;AAEA,sBAAO;AAAK,IAAA,KAAK,EAAC,yBAAX;AAAA,4BACP;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA,8BACE;AAAG,QAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,KAAK,EAAC,SAAX;AAAA,gCACE;AAAG,UAAA,KAAK,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,eAQP;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA,8BACE;AAAG,QAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,KAAK,EAAC,SAAX;AAAA,gCACE;AAAG,UAAA,KAAK,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARO,eAeP;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA,8BACE;AAAG,QAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,KAAK,EAAC,SAAX;AAAA,gCACE;AAAG,UAAA,KAAK,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAfO;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAwBD,CAxCD;;GAAMV,I;;MAAAA,I;;AA0CN,MAAMW,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAeF,KAAK,CAACH,IAA3B;AACA,sBAAO;AAAA,cACJK;AADI;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD,CALD,C,CAOA;;;MAPMH,I;AAWN,eAAeZ,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nfunction App() {\n  return (\n    <div>\n     <List />\n    </div>\n  );\n}\n\n\n// The two functions below are how we use a GET function from the backend \n// to display them onto our FRONT END BOOM ------------------------------------------------\nconst List = () => {\n  const [todos, setTodos] = useState([]);\n\n  // makeAjax request\n  const fetchTodos = async () => {\n    //fetch request goes here:\n    const res = await fetch('http://localhost:3001/todos');\n    setTodos(await res.json()); // turn response into json\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const items = todos.map(todo => <Item todo={todo} key={todo._id}/>)\n\n  return <div class=\"ui relaxed divided list\">\n  <div class=\"item\">\n    <i class=\"large github middle aligned icon\"></i>\n    <div class=\"content\">\n      <a class=\"header\">Semantic-Org/Semantic-UI</a>\n      <div class=\"description\">Updated 10 mins ago</div>\n    </div>\n  </div>\n  <div class=\"item\">\n    <i class=\"large github middle aligned icon\"></i>\n    <div class=\"content\">\n      <a class=\"header\">Semantic-Org/Semantic-UI-Docs</a>\n      <div class=\"description\">Updated 22 mins ago</div>\n    </div>\n  </div>\n  <div class=\"item\">\n    <i class=\"large github middle aligned icon\"></i>\n    <div class=\"content\">\n      <a class=\"header\">Semantic-Org/Semantic-UI-Meteor</a>\n      <div class=\"description\">Updated 34 mins ago</div>\n    </div>\n  </div>\n</div>\n\n};\n\nconst Item = (props) => {\n  const {done ,desc} = props.todo;\n  return <div>\n    {desc}\n  </div>\n}\n\n//  ------------------------------------------------ ------------------------------------------------\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}