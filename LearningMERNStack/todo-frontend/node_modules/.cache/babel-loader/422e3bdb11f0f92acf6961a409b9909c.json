{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/uzmashaheen/Desktop/Ayman and Ammar/SideProjects/ToDos.io/LearningMERNStack/todo-frontend/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, Component } from 'react'; // import ReactDOM, { render } from 'react-dom';\n// import Dropdown from './dropdownmenu/Dropdown.js';\n// import { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n// import $ from 'jquery'; \n// import { Button, Progress } from 'semantic-ui-react'\n// for side bar, the following 2 imports are for the animatedside bar\n\nimport { Container } from \"semantic-ui-react\";\nimport Example from \"./example\"; // import {\n//   Checkbox,\n//   Grid,\n//   Header,\n//   Icon,\n//   Image,\n//   Menu,\n//   Segment,\n//   Sidebar,\n// } from 'semantic-ui-react'\n\nvar counter = 0;\nvar prevDiv;\nvar prevParent;\n\nconst CalculateTaskProgress = async () => {\n  counter++; // we'll make 2 Get requests here. First, to find total number of tasks and then to find the number of compelted tasks.\n  // second request\n\n  const res2 = await fetch('http://localhost:3001/todosTaskCompletedCount'); // await console.log(\"CalculateTaskProgress totalTaskCompletedCount is \", await res2.json());\n\n  totalTaskCompletedCount = await res2.json(); //first fetch request goes here:\n\n  const res = await fetch('http://localhost:3001/todosTaskCount'); // await console.log(\"CalculateTaskProgress totalTaskCount is \", await res.json());\n\n  totalTaskCount = await res.json(); // settotalTaskCount(totalTaskCount);\n  // settotalTaskCompletedCount(totalTaskCompletedCount);\n  // return {\n  //   'totalTaskCount': totalTaskCount, 'totalTaskCompletedCount': totalTaskCompletedCount\n  // }\n\n  console.log(totalTaskCompletedCount, \"out of \", totalTaskCount);\n  var myCoolDiv = document.createElement(\"div\");\n  myCoolDiv.id = \"MyCoolDiv\";\n  myCoolDiv.style.color = \"#2b0808\";\n  var child = document.createTextNode(totalTaskCompletedCount + \" out of \" + totalTaskCount + \" Tasks Completed - You're \" + 100 * totalTaskCompletedCount / totalTaskCount + \" % done!\");\n  child.textAlign = 'center';\n  child.color = 'green';\n  myCoolDiv.appendChild(child);\n  document.getElementById(\"playerContainer\").appendChild(myCoolDiv);\n  setTimeout(function () {\n    // No need for this, we already have it from the above:\n    // var myCoolDiv = document.getElementById(\"MyCoolDiv\");\n    document.getElementById(\"playerContainer\").removeChild(myCoolDiv);\n  }, 1500); // var div = document.createElement(\"div\");\n  // div.innerHTML = totalTaskCompletedCount + ' out of ' + totalTaskCount + ' Tasks Completed!';\n  // if (prevDiv) {\n  //   prevDiv.parentNode.removeChild(prevDiv);\n  // } // if it does not exist, \n  // prevDiv = div\n  // // prevParent = document.body;\n  // document.body.appendChild(div);\n  // // document.body.appendChild(div);\n  // // document.body.appendChild(div);\n  // console.log('done')\n  // document.body.removeChild(div);\n}; // function App() {\n\n\n_c = CalculateTaskProgress;\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          margin: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          margin: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(AdditionalContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          margin: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nlet totalTaskCount = 0;\nlet totalTaskCompletedCount = 0; // const Example = () => {\n//   const [visible, setVisible] = React.useState(false)\n//   return (\n//     <div>\n//       <Grid columns={1}>\n//       <Grid.Column>\n//         <Checkbox\n//           checked={visible}\n//           label={{ children: <code>visible</code> }}\n//           onChange={(e, data) => setVisible(data.checked)}\n//         />\n//       </Grid.Column>\n//       <Grid.Column>\n//         <Sidebar.Pushable as={Segment}>\n//           <Sidebar\n//             as={Menu}\n//             animation='overlay'\n//             direction='left'\n//             icon='labeled'\n//             inverted\n//             onHide={() => setVisible(false)}\n//             vertical\n//             // visible={false}\n//             visible={visible}\n//             width='thin'\n//           >\n//             <Menu.Item as='a'>\n//               <Icon name='home' />\n//               Home\n//             </Menu.Item>\n//             <Menu.Item as='a'>\n//               <Icon name='gamepad' />\n//               Games\n//             </Menu.Item>\n//             <Menu.Item as='a'>\n//               <Icon name='camera' />\n//               Channels\n//             </Menu.Item>\n//           </Sidebar>\n//           <Sidebar\n//             as={Menu}\n//             animation='overlay'\n//             direction='right'\n//             inverted\n//             vertical\n//             // visible={true}\n//             visible={visible}\n//           >\n//             <Menu.Item as='a' header>\n//               File Permissions\n//             </Menu.Item>\n//             <Menu.Item as='a'>Share on Social</Menu.Item>\n//             <Menu.Item as='a'>Share by E-mail</Menu.Item>\n//             <Menu.Item as='a'>Edit Permissions</Menu.Item>\n//             <Menu.Item as='a'>Delete Permanently</Menu.Item>\n//           </Sidebar>\n//           <Sidebar.Pusher>\n//             <Segment basic>\n//               <Header as='h3'>Application Content</Header>\n//               <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png' />\n//             </Segment>\n//           </Sidebar.Pusher>\n//         </Sidebar.Pushable>\n//       </Grid.Column>\n//     </Grid>\n//     </div>\n//   )\n// }\n\nconst AdditionalContainer = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  var [totalTaskCount, settotalTaskCount] = useState([]);\n  var [totalTaskCompletedCount, settotalTaskCompletedCount] = useState([]);\n  const [text, setText] = useState([]);\n  const [date, setDate] = useState([]);\n  const [category, setCategory] = useState([]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      margin: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui horizontal divider\",\n      style: {\n        'marginTop': '50px'\n      },\n      children: \"Your Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"ui animated fade inverted orange button\",\n      tabindex: \"0\",\n      style: {\n        display: 'block',\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      },\n      onClick: CalculateTaskProgress,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"visible content\",\n        onClick: CalculateTaskProgress,\n        children: \"Calculate Your Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"hidden content\",\n        children: \"Drumroll please...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"playerContainer\",\n      className: \"label\",\n      style: {\n        display: 'block',\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      },\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui active progress\",\n      \"data-value\": \"57\",\n      \"data-total\": \"200\",\n      \"data-percent\": \"57\",\n      width: \"57%\",\n      style: {\n        \"transitionDuration\": \"200ms\",\n        \"width\": \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bar\",\n        style: {\n          color: \"green\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          children: \"6%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui indicating progress success\",\n        \"data-value\": \"1\",\n        \"data-total\": \"200\",\n        id: \"example5\",\n        \"data-percent\": \"100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar\",\n          style: {\n            \"transitionDuration\": \"200ms\",\n            \"width\": \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress\",\n            children: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"label\",\n      style: {\n        'textAlign': 'center'\n      },\n      children: \"Task Completion in Progress... We've got some work to do!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui horizontal divider\",\n      style: {\n        'marginTop': '50px'\n      },\n      children: \"Additional Features to Potentially Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"ui teal right labeled icon button\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          textAlign: 'left'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Drop down menu of Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Priority Tags (High, Medium, Low)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Live Progress Bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Transposed Task View - organizing tasks: alphabetically, based on priority, based on date, based on tag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 3\n  }, this);\n}; // The two functions below are how we use a GET function from the backend \n// to display them onto our FRONT END BOOM ------------------------------------------------\n\n\n_s(AdditionalContainer, \"ZmJoKXgrISAg8Gtz7SG3Jjk5UcE=\");\n\n_c2 = AdditionalContainer;\n\nconst List = () => {\n  _s2();\n\n  const [todos, setTodos] = useState([]);\n  var [totalTaskCount, settotalTaskCount] = useState([]);\n  var [totalTaskCompletedCount, settotalTaskCompletedCount] = useState([]);\n  const [text, setText] = useState([]);\n  const [date, setDate] = useState([]);\n  const [category, setCategory] = useState([]); // makeAjax request to FETCH TODOS counts ===================\n\n  const fetchTodoCountsOfCompletedAndTotal = async () => {\n    // we'll make 2 Get requests here. First, to find total number of tasks and then to find the number of compelted tasks.\n    // second request\n    const res2 = await fetch('http://localhost:3001/todosTaskCompletedCount');\n    await console.log(\"totalTaskCompletedCount is \", await res2.json());\n    totalTaskCompletedCount = res2; //first fetch request goes here:\n\n    const res = await fetch('http://localhost:3001/todosTaskCount');\n    await console.log(\"totalTaskCount is \", await res.json());\n    totalTaskCount = res; // settotalTaskCount(totalTaskCount);\n    // settotalTaskCompletedCount(totalTaskCompletedCount);\n\n    return {\n      'totalTaskCount': totalTaskCount,\n      'totalTaskCompletedCount': totalTaskCompletedCount\n    };\n  }; // makeAjax request to FETCH TODOS ===================\n\n\n  const fetchTodos = async () => {\n    //fetch request goes here:\n    fetchTodoCountsOfCompletedAndTotal();\n    const res = await fetch('http://localhost:3001/todos');\n    setTodos(await res.json()); // turn response into json\n  }; // makeAjax request to Add TODOS -- onclick ===================\n\n\n  const addTodo = async () => {\n    //fetch request goes here:\n    if (!text || !date || !category) {\n      alert('Task cannot be added until you fill in name, category, and date');\n      return;\n    } else {\n      const res = await fetch('http://localhost:3001/todos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n        },\n        body: JSON.stringify({\n          desc: text,\n          done: false,\n          due: date,\n          tag: category\n        })\n      }); // currently, after we add a TODO, we must manuallly referesh our page to see the new Todos.\n      // We'll insert the following lines in order to have a an aut-refers\n      // assume the todo is successfully added a(and dont do any errro hadnling)\n\n      fetchTodos(); // this wil fetch them and reflect them ont othe scren\n\n      settotalTaskCount(totalTaskCount);\n      setText('');\n    }\n  }; // // deleteAllTodos\n\n\n  const deleteAllTodos = async () => {\n    await fetch(`http://localhost:3001/todos`, {\n      method: 'DELETE'\n    });\n    fetchTodos();\n  };\n\n  const StartTemplateToDoList = async () => {\n    deleteAllTodos();\n    await fetch(`http://localhost:3001/todos/standardTemplate`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    fetchTodos();\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  const items = todos.map(todo => /*#__PURE__*/_jsxDEV(Item, {\n    todo: todo,\n    fetchTodos: fetchTodos\n  }, todo._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 315,\n    columnNumber: 35\n  }, this)); // drop down variables\n\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen(prevState => !prevState); // used to be ui centered card\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    styles: {\n      'padding-left': '100px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      styles: {\n        'width': '1600px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          'textAlign': 'center'\n        },\n        children: \"My To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          'display': 'block',\n          'marginLeft': 'auto',\n          'marginRight': 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"positive ui button\",\n          onClick: StartTemplateToDoList,\n          style: {\n            'display': 'block',\n            'marginLeft': 'auto',\n            'marginRight': 'auto'\n          },\n          children: \"Start Standardized ToDo List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"negative ui button\",\n          onClick: deleteAllTodos,\n          style: {\n            'display': 'block',\n            'marginLeft': 'auto',\n            'marginRight': 'auto',\n            'marginTop': '5px',\n            'marginBottom': '5px'\n          },\n          children: \"Clear & Start Afresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      styles: {\n        'width': '1600px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui relaxed divided list\",\n        styles: {\n          'width': '1600px'\n        },\n        children: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui horizontal divider\",\n      style: {\n        'marginTop': '50px'\n      },\n      children: \"Add More Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extra content\",\n      style: {\n        display: 'flex',\n        'alignItems': 'center',\n        'justifyContent': 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fluid ui action input\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui cards\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ui teal right labeled icon button\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: text,\n                onChange: e => setText(e.target.value),\n                placeholder: \"Task Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: category,\n                onChange: e => setCategory(e.target.value),\n                placeholder: \"Task Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: date,\n                onChange: e => setDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui teal right labeled icon button\",\n          onClick: addTodo,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"plus icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 79\n          }, this), \"add\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 10\n  }, this);\n}; // const CalculateTaskProgress = (props) => {\n//   totalTaskCount = props.todo;\n// }\n\n\n_s2(List, \"lXtLHtRdMI+AKyePqP2pKo4NTmg=\");\n\n_c3 = List;\n\nconst Item = props => {\n  const {\n    done,\n    desc,\n    _id,\n    tag,\n    due\n  } = props.todo;\n\n  const deleteTodo = async () => {\n    await fetch(`http://localhost:3001/todos/${_id}`, {\n      method: 'DELETE'\n    });\n    props.fetchTodos();\n  };\n\n  const toggleDone = async () => {\n    await fetch(`http://localhost:3001/todos/${_id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        done: !done,\n        desc,\n        due,\n        tag\n      })\n    });\n    props.fetchTodos();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item\",\n    children: [done ? /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"left floated green check square outline icon\",\n      onClick: toggleDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"left floated square outline icon\",\n      onClick: toggleDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this), done ? /*#__PURE__*/_jsxDEV(\"del\", {\n      children: [\" \", desc]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", desc]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 30\n    }, this), totalTaskCount, done, /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"right floated red trash icon\",\n      onClick: deleteTodo,\n      style: {\n        height: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"right floated ui basic image label\",\n      style: {\n        'marginRight': \"13px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"blue calendar icon\",\n        style: {\n          'marginRight': \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 86\n      }, this), due]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 5\n    }, this), tag == \"Academics\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n      a: true,\n      className: \"right floated ui teal tag label\",\n      style: {\n        \"marginRight\": \"10px\"\n      },\n      children: tag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 11\n    }, this) : tag == \"Career\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n      a: true,\n      className: \"right floated ui orange tag label\",\n      style: {\n        \"marginRight\": \"10px\"\n      },\n      children: tag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 11\n    }, this) : tag == \"Finance\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n      a: true,\n      className: \"right floated ui pink tag label\",\n      style: {\n        \"marginRight\": \"10px\"\n      },\n      children: tag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 11\n    }, this) : tag == \"Community\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n      a: true,\n      className: \"right floated ui purple tag label\",\n      style: {\n        \"marginRight\": \"10px\"\n      },\n      children: tag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 11\n    }, this) : tag == \"Home\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n      a: true,\n      className: \"right floated ui blue tag label\",\n      style: {\n        \"marginRight\": \"10px\"\n      },\n      children: tag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      a: true,\n      className: \"right floated ui green tag label\",\n      style: {\n        \"marginRight\": \"10px\"\n      },\n      children: tag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 395,\n    columnNumber: 10\n  }, this);\n}; //  ------------------------------------------------ ------------------------------------------------\n\n\n_c4 = Item;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CalculateTaskProgress\");\n$RefreshReg$(_c2, \"AdditionalContainer\");\n$RefreshReg$(_c3, \"List\");\n$RefreshReg$(_c4, \"Item\");","map":{"version":3,"sources":["/Users/uzmashaheen/Desktop/Ayman and Ammar/SideProjects/ToDos.io/LearningMERNStack/todo-frontend/src/App.js"],"names":["React","useState","useEffect","Component","Container","Example","counter","prevDiv","prevParent","CalculateTaskProgress","res2","fetch","totalTaskCompletedCount","json","res","totalTaskCount","console","log","myCoolDiv","document","createElement","id","style","color","child","createTextNode","textAlign","appendChild","getElementById","setTimeout","removeChild","App","render","margin","AdditionalContainer","todos","setTodos","settotalTaskCount","settotalTaskCompletedCount","text","setText","date","setDate","category","setCategory","display","marginLeft","marginRight","List","fetchTodoCountsOfCompletedAndTotal","fetchTodos","addTodo","alert","method","headers","body","JSON","stringify","desc","done","due","tag","deleteAllTodos","StartTemplateToDoList","items","map","todo","_id","dropdownOpen","setDropdownOpen","toggle","prevState","e","target","value","Item","props","deleteTodo","toggleDone","height"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, Component} from 'react'\n// import ReactDOM, { render } from 'react-dom';\n// import Dropdown from './dropdownmenu/Dropdown.js';\n// import { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n// import $ from 'jquery'; \n// import { Button, Progress } from 'semantic-ui-react'\n// for side bar, the following 2 imports are for the animatedside bar\nimport { Container } from \"semantic-ui-react\";\nimport Example from \"./example\";\n// import {\n//   Checkbox,\n//   Grid,\n//   Header,\n//   Icon,\n//   Image,\n//   Menu,\n//   Segment,\n//   Sidebar,\n// } from 'semantic-ui-react'\n\n\nvar counter = 0;\nvar prevDiv;\nvar prevParent;\nconst CalculateTaskProgress = async () => {\n  counter++;\n  // we'll make 2 Get requests here. First, to find total number of tasks and then to find the number of compelted tasks.\n  // second request\n  const res2 = await fetch('http://localhost:3001/todosTaskCompletedCount');\n  // await console.log(\"CalculateTaskProgress totalTaskCompletedCount is \", await res2.json());\n  totalTaskCompletedCount =  await res2.json();\n  \n  //first fetch request goes here:\n  const res = await fetch('http://localhost:3001/todosTaskCount');\n  // await console.log(\"CalculateTaskProgress totalTaskCount is \", await res.json());\n  totalTaskCount =  await res.json() ;\n  // settotalTaskCount(totalTaskCount);\n  // settotalTaskCompletedCount(totalTaskCompletedCount);\n  // return {\n  //   'totalTaskCount': totalTaskCount, 'totalTaskCompletedCount': totalTaskCompletedCount\n  // }\n  console.log(totalTaskCompletedCount, \"out of \", totalTaskCount)\n\n\n\n\n  var myCoolDiv = document.createElement(\"div\");\nmyCoolDiv.id = \"MyCoolDiv\";\nmyCoolDiv.style.color = \"#2b0808\";\nvar child =   document.createTextNode(totalTaskCompletedCount+ \" out of \"+ totalTaskCount + \" Tasks Completed - You're \" + 100*totalTaskCompletedCount/totalTaskCount + \" % done!\");\nchild.textAlign = 'center';\nchild.color = 'green'\nmyCoolDiv.appendChild(\n  child\n);\ndocument.getElementById(\"playerContainer\").appendChild(myCoolDiv);\n\nsetTimeout(function(){ \n    // No need for this, we already have it from the above:\n    // var myCoolDiv = document.getElementById(\"MyCoolDiv\");\n    document.getElementById(\"playerContainer\").removeChild(myCoolDiv);\n}, 1500);\n\n\n\n\n\n\n  // var div = document.createElement(\"div\");\n  // div.innerHTML = totalTaskCompletedCount + ' out of ' + totalTaskCount + ' Tasks Completed!';\n  // if (prevDiv) {\n  //   prevDiv.parentNode.removeChild(prevDiv);\n  // } // if it does not exist, \n  // prevDiv = div\n  // // prevParent = document.body;\n  // document.body.appendChild(div);\n  // // document.body.appendChild(div);\n  // // document.body.appendChild(div);\n\n  // console.log('done')\n  // document.body.removeChild(div);\n};\n\n\n// function App() {\n  class App extends Component {\n    render() {\n  return (\n    <div>\n          <Container style={{ margin: 20 }}>\n\n    <List />\n    </Container>\n\n    {/* <Container style={{ margin: 20 }}> */}\n    <Container style={{ margin: 20 }}>\n\n    <AdditionalContainer />\n    </Container>\n    <Container style={{ margin: 20 }}>\n\n    <Example />\n    </Container>\n\n    </div>\n  ) }\n}\n\nlet totalTaskCount = 0;\nlet totalTaskCompletedCount = 0;\n\n// const Example = () => {\n//   const [visible, setVisible] = React.useState(false)\n\n//   return (\n//     <div>\n//       <Grid columns={1}>\n//       <Grid.Column>\n//         <Checkbox\n//           checked={visible}\n//           label={{ children: <code>visible</code> }}\n//           onChange={(e, data) => setVisible(data.checked)}\n//         />\n//       </Grid.Column>\n\n//       <Grid.Column>\n//         <Sidebar.Pushable as={Segment}>\n//           <Sidebar\n//             as={Menu}\n//             animation='overlay'\n//             direction='left'\n//             icon='labeled'\n//             inverted\n//             onHide={() => setVisible(false)}\n//             vertical\n//             // visible={false}\n//             visible={visible}\n//             width='thin'\n//           >\n//             <Menu.Item as='a'>\n//               <Icon name='home' />\n//               Home\n//             </Menu.Item>\n//             <Menu.Item as='a'>\n//               <Icon name='gamepad' />\n//               Games\n//             </Menu.Item>\n//             <Menu.Item as='a'>\n//               <Icon name='camera' />\n//               Channels\n//             </Menu.Item>\n//           </Sidebar>\n\n//           <Sidebar\n//             as={Menu}\n//             animation='overlay'\n//             direction='right'\n//             inverted\n//             vertical\n//             // visible={true}\n//             visible={visible}\n//           >\n//             <Menu.Item as='a' header>\n//               File Permissions\n//             </Menu.Item>\n//             <Menu.Item as='a'>Share on Social</Menu.Item>\n//             <Menu.Item as='a'>Share by E-mail</Menu.Item>\n//             <Menu.Item as='a'>Edit Permissions</Menu.Item>\n//             <Menu.Item as='a'>Delete Permanently</Menu.Item>\n//           </Sidebar>\n\n//           <Sidebar.Pusher>\n//             <Segment basic>\n//               <Header as='h3'>Application Content</Header>\n//               <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png' />\n//             </Segment>\n//           </Sidebar.Pusher>\n//         </Sidebar.Pushable>\n//       </Grid.Column>\n//     </Grid>\n//     </div>\n//   )\n\n// }\n\nconst AdditionalContainer = () => {\n  const [todos, setTodos] = useState([]);\n  var [totalTaskCount, settotalTaskCount] = useState([]);\n  var [totalTaskCompletedCount, settotalTaskCompletedCount] = useState([]);\n  const [text, setText] = useState([]);\n  const [date, setDate] = useState([]);\n  const [category, setCategory] = useState([]);\n  return (\n  <Container style={{ margin: 20 }}>\n  <div className=\"ui horizontal divider\" style={{'marginTop':'50px'}}>Your Progress</div>\n  <div class=\"ui animated fade inverted orange button\" tabindex=\"0\" style={{display:'block', marginLeft:'auto', marginRight:'auto'}} onClick={CalculateTaskProgress}>\n      <div class=\"visible content\" onClick={CalculateTaskProgress}>Calculate Your Progress</div>\n      <i class=\"hidden content\">\n        Drumroll please...\n      </i>\n    </div>\n    <div id=\"playerContainer\"  className=\"label\" style={{display:'block', marginLeft:'auto', marginRight:'auto'}}> </div>\n\n\n  <div className=\"ui active progress\" data-value=\"57\" data-total=\"200\" data-percent=\"57\" width=\"57%\" style={{\"transitionDuration\": \"200ms\", \"width\": \"100%\"}}>\n    <div className=\"bar\" style={{color:\"green\"}}>\n      <div className=\"progress\">6%</div>\n      {/* <Progress percent={25} /> */}\n    </div>\n\n    <div className=\"ui indicating progress success\" data-value=\"1\" data-total=\"200\" id=\"example5\" data-percent=\"100\">\n            <div className=\"bar\" style={{\"transitionDuration\": \"200ms\", \"width\": \"100%\"}}>\n              <div className=\"progress\">100%</div>\n            </div>\n    </div> \n\n</div>\n<div className=\"label\" style={{'textAlign':'center'}}>Task Completion in Progress... We've got some work to do!</div>\n<div className=\"ui horizontal divider\" style={{'marginTop':'50px'}}>Additional Features to Potentially Add</div>\n<button className=\"ui teal right labeled icon button\" >\n<ul style={{textAlign: 'left'}}>\n  <li>Drop down menu of Categories</li>\n  <li>Priority Tags (High, Medium, Low)</li>\n  <li>Live Progress Bar</li>\n  <li>Transposed Task View - organizing tasks: alphabetically, based on priority, based on date, based on tag</li>\n</ul>\n</button>\n</Container>\n  )\n};\n// The two functions below are how we use a GET function from the backend \n// to display them onto our FRONT END BOOM ------------------------------------------------\nconst List = () => {\n  const [todos, setTodos] = useState([]);\n  var [totalTaskCount, settotalTaskCount] = useState([]);\n  var [totalTaskCompletedCount, settotalTaskCompletedCount] = useState([]);\n  const [text, setText] = useState([]);\n  const [date, setDate] = useState([]);\n  const [category, setCategory] = useState([]);\n\n// makeAjax request to FETCH TODOS counts ===================\n    const fetchTodoCountsOfCompletedAndTotal = async () => {\n      // we'll make 2 Get requests here. First, to find total number of tasks and then to find the number of compelted tasks.\n      // second request\n      const res2 = await fetch('http://localhost:3001/todosTaskCompletedCount');\n      await console.log(\"totalTaskCompletedCount is \", await res2.json());\n      totalTaskCompletedCount =  res2;\n      \n      //first fetch request goes here:\n      const res = await fetch('http://localhost:3001/todosTaskCount');\n      await console.log(\"totalTaskCount is \", await res.json());\n      totalTaskCount =  res ;\n      // settotalTaskCount(totalTaskCount);\n      // settotalTaskCompletedCount(totalTaskCompletedCount);\n      return {\n        'totalTaskCount': totalTaskCount, 'totalTaskCompletedCount': totalTaskCompletedCount\n      }\n    };\n\n  // makeAjax request to FETCH TODOS ===================\n  const fetchTodos = async () => {\n    //fetch request goes here:\n    fetchTodoCountsOfCompletedAndTotal();\n    const res = await fetch('http://localhost:3001/todos');\n    setTodos(await res.json()); // turn response into json\n  };\n\n  // makeAjax request to Add TODOS -- onclick ===================\n  const addTodo = async () => {\n    //fetch request goes here:\n    if (!text || !date || !category ) {\n      alert('Task cannot be added until you fill in name, category, and date');\n      return;\n    } else {\n      const res = await fetch('http://localhost:3001/todos', {\n        method:'POST',\n        headers: {\n          'Content-Type': 'application/json'\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: JSON.stringify({ desc: text, done: false, due: date, tag: category})\n      }\n    );\n    // currently, after we add a TODO, we must manuallly referesh our page to see the new Todos.\n    // We'll insert the following lines in order to have a an aut-refers\n    // assume the todo is successfully added a(and dont do any errro hadnling)\n    fetchTodos(); // this wil fetch them and reflect them ont othe scren\n    settotalTaskCount(totalTaskCount);\n    setText('');\n  }};\n\n    // // deleteAllTodos\n    const deleteAllTodos = async () => {\n      await fetch(`http://localhost:3001/todos`, {\n        method:'DELETE'\n      });\n      fetchTodos();\n    }\n\n    const StartTemplateToDoList = async () => {\n      deleteAllTodos();\n      await fetch(`http://localhost:3001/todos/standardTemplate`, {\n        method:'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      fetchTodos();\n    }\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const items = todos.map(todo => <Item todo={todo} key={todo._id} fetchTodos={fetchTodos}/> )\n  \n  // drop down variables\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n// used to be ui centered card\n  return <div className=\"ui segment\" styles={{'padding-left':'100px'}}>\n  <div className=\"content\" styles={{'width':'1600px'}}>\n    <h1 style={{'textAlign':'center'}}>My To-Do List</h1>\n    {/* <div className=\"header\">My To-Do List</div> */}\n    <div style={{'display':'block', 'marginLeft':'auto', 'marginRight': 'auto' }}>\n        <button className=\"positive ui button\" onClick={StartTemplateToDoList} style={{'display':'block', 'marginLeft':'auto', 'marginRight': 'auto' }}>Start Standardized ToDo List</button>\n        <button className=\"negative ui button\" onClick={deleteAllTodos} style={{'display':'block', 'marginLeft':'auto', 'marginRight': 'auto', 'marginTop': '5px', 'marginBottom': '5px' }}>Clear & Start Afresh</button>\n    </div>\n    \n  </div>\n  <div className=\"content\" styles={{'width':'1600px'}}>\n\n    <div className=\"ui relaxed divided list\" styles={{'width':'1600px'}}>\n      {items}\n    </div>\n  </div>\n\n  <div className=\"ui horizontal divider\" style={{'marginTop':'50px'}}>Add More Tasks</div>\n  <div className=\"extra content\" style={{display:'flex',   'alignItems': 'center', 'justifyContent': 'center'}}>\n    <div className=\"fluid ui action input\">\n          <div className=\"ui cards\">\n            <div className=\"card\">\n            <button className=\"ui teal right labeled icon button\" >\n                {/* <List style={{color:\"blue\"}}> */}\n                <input type=\"text\" value={text} onChange={(e) => \n                  setText(e.target.value)} \n                  placeholder=\"Task Name\"/>\n                    {/* <br></br> */}\n                    <input type=\"text\" value={category} onChange={(e) => setCategory(e.target.value)} placeholder=\"Task Category\"/>\n                    <input type=\"date\" value={date} onChange={(e) => setDate(e.target.value)} /> \n                  {/* </List> */}\n            </button>\n\n            \n                  </div>\n                {/* </div> */}\n\n              \n          </div>\n      <button className=\"ui teal right labeled icon button\" onClick={addTodo}><i className=\"plus icon\"></i>add</button>\n    </div>\n  </div>\n\n</div>\n\n};\n// const CalculateTaskProgress = (props) => {\n//   totalTaskCount = props.todo;\n\n// }\nconst Item = (props) => {\n  const {done , desc, _id, tag, due} = props.todo;\n  const deleteTodo = async () => {\n    await fetch(`http://localhost:3001/todos/${_id}`, {\n      method:'DELETE'\n    }\n    );\n    props.fetchTodos();\n  }\n\n  const toggleDone = async () => {\n    await fetch(`http://localhost:3001/todos/${_id}`, {\n      method:'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ done: !done, desc, due, tag})\n    });\n\n    props.fetchTodos();\n  };\n\n\n  return <div className='item'>\n    {\n      done ? \n      <i className=\"left floated green check square outline icon\" onClick={toggleDone}></i> : \n      <i className=\"left floated square outline icon\" onClick={toggleDone}></i>\n    }\n    {\n      done ?\n      <del > {desc}</del> :  <p > {desc}</p>\n    }\n    {totalTaskCount}\n    {done}\n    <i className=\"right floated red trash icon\" onClick={deleteTodo} style={{height:\"10px\"}} ></i>\n    <a className=\"right floated ui basic image label\" style={{'marginRight':\"13px\"}}><i className=\"blue calendar icon\" style={{'marginRight':\"20px\"}}/>{due}</a>\n    { (tag == \"Academics\") ?\n          <button a className=\"right floated ui teal tag label\"  style={{\"marginRight\": \"10px\"}} >{tag}</button> :\n          (tag == \"Career\") ?\n          <button a className=\"right floated ui orange tag label\"  style={{\"marginRight\": \"10px\"}} >{tag}</button> :\n          (tag == \"Finance\") ?\n          <button a className=\"right floated ui pink tag label\"  style={{\"marginRight\": \"10px\"}} >{tag}</button> :\n          (tag == \"Community\") ?\n          <button a className=\"right floated ui purple tag label\"  style={{\"marginRight\": \"10px\"}} >{tag}</button> :\n          (tag == \"Home\") ?\n          <button a className=\"right floated ui blue tag label\"  style={{\"marginRight\": \"10px\"}} >{tag}</button> :\n          <button a className=\"right floated ui green tag label\"  style={{\"marginRight\": \"10px\"}} >{tag}</button>\n    }\n    \n     \n    {/* <button a className=\"right floated ui teal tag label\"  style={{\"marginRight\": \"10px\"}} >{tag}</button> */}\n\n  </div>\n}\n\n//  ------------------------------------------------ ------------------------------------------------\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}