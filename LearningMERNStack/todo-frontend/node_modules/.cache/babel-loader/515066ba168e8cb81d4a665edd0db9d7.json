{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/uzmashaheen/Desktop/Ayman and Ammar/SideProjects/ToDos.io/LearningMERNStack/todo-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // import ReactDOM, { render } from 'react-dom';\n// import Dropdown from './dropdownmenu/Dropdown.js';\n\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n} // The two functions below are how we use a GET function from the backend \n// to display them onto our FRONT END BOOM ------------------------------------------------\n\n\n_c = App;\n\nconst List = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [text, setText] = useState([]);\n  const [date, setDate] = useState([]); // makeAjax request to FETCH TODOS ===================\n\n  const fetchTodos = async () => {\n    //fetch request goes here:\n    const res = await fetch('http://localhost:3001/todos');\n    setTodos(await res.json()); // turn response into json\n  }; // makeAjax request to Add TODOS -- onclick ===================\n\n\n  const addTodo = async () => {\n    //fetch request goes here:\n    const res = await fetch('http://localhost:3001/todos', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: JSON.stringify({\n        desc: text,\n        done: false,\n        due: date\n      })\n    }); // currently, after we add a TODO, we must manuallly referesh our page to see the new Todos.\n    // We'll insert the following lines in order to have a an aut-refers\n    // assume the todo is successfully added a(and dont do any errro hadnling)\n\n    fetchTodos(); // this wil fetch them and reflect them ont othe scren\n\n    setText('');\n  }; // // deleteAllTodos\n\n\n  const deleteAllTodos = async () => {\n    await fetch(`http://localhost:3001/todos`, {\n      method: 'DELETE'\n    });\n    fetchTodos();\n  };\n\n  const StartTemplateToDoList = async () => {\n    deleteAllTodos();\n    await fetch(`http://localhost:3001/todos/standardTemplate`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    fetchTodos();\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  const items = todos.map(todo => /*#__PURE__*/_jsxDEV(Item, {\n    todo: todo,\n    fetchTodos: fetchTodos\n  }, todo._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 35\n  }, this)); // drop down variables\n\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"My To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"positive ui button\",\n        onClick: deleteAllTodos,\n        children: \"Clear & Start Afresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"positive ui button\",\n        onClick: StartTemplateToDoList,\n        children: \"Start Standardized ToDo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui relaxed divided list\",\n        children: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extra content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fluid ui action input\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"ui cards\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"list\", {\n              style: {\n                color: \"blue\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: text,\n                onChange: e => setText(e.target.value),\n                placeholder: \"Task Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: date,\n                onChange: e => setDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                isOpen: dropdownOpen,\n                toggle: toggle,\n                children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n                  caret: true,\n                  children: \"Task Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n                  children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n                    header: true,\n                    children: \"Header\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n                    children: \"Some Action\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n                    text: true,\n                    children: \"Dropdown Item Text\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n                    children: \"Quo Action\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui teal right labeled icon button\",\n          onClick: addTodo,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"plus icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 9\n          }, this), \"add\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 10\n  }, this);\n};\n\n_s(List, \"zOoVPoKsPsPOX5I72FNc1y9EykA=\");\n\n_c2 = List;\n\nconst Item = props => {\n  const {\n    done,\n    desc,\n    _id\n  } = props.todo;\n\n  const deleteTodo = async () => {\n    await fetch(`http://localhost:3001/todos/${_id}`, {\n      method: 'DELETE'\n    });\n    props.fetchTodos();\n  };\n\n  const toggleDone = async () => {\n    await fetch(`http://localhost:3001/todos/${_id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        done: !done,\n        desc\n      })\n    });\n    props.fetchTodos();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item\",\n    children: [done ? /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"left floated green check square outline icon\",\n      onClick: toggleDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"left floated square outline icon\",\n      onClick: toggleDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), done ? /*#__PURE__*/_jsxDEV(\"del\", {\n      children: [\" \", desc]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", desc]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 30\n    }, this), done, /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"right floated red trash icon\",\n      onClick: deleteTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 10\n  }, this);\n}; //  ------------------------------------------------ ------------------------------------------------\n\n\n_c3 = Item;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"List\");\n$RefreshReg$(_c3, \"Item\");","map":{"version":3,"sources":["/Users/uzmashaheen/Desktop/Ayman and Ammar/SideProjects/ToDos.io/LearningMERNStack/todo-frontend/src/App.js"],"names":["React","useState","useEffect","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","App","List","todos","setTodos","text","setText","date","setDate","fetchTodos","res","fetch","json","addTodo","method","headers","body","JSON","stringify","desc","done","due","deleteAllTodos","StartTemplateToDoList","items","map","todo","_id","dropdownOpen","setDropdownOpen","toggle","prevState","color","e","target","value","Item","props","deleteTodo","toggleDone"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\n// import ReactDOM, { render } from 'react-dom';\n// import Dropdown from './dropdownmenu/Dropdown.js';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\n\n\n\nfunction App() {\n  return (\n    <div>\n     <List />\n    </div>\n  );\n}\n\n// The two functions below are how we use a GET function from the backend \n// to display them onto our FRONT END BOOM ------------------------------------------------\nconst List = () => {\n  const [todos, setTodos] = useState([]);\n  const [text, setText] = useState([]);\n  const [date, setDate] = useState([]);\n\n  // makeAjax request to FETCH TODOS ===================\n  const fetchTodos = async () => {\n    //fetch request goes here:\n    const res = await fetch('http://localhost:3001/todos');\n    setTodos(await res.json()); // turn response into json\n  };\n\n  // makeAjax request to Add TODOS -- onclick ===================\n  const addTodo = async () => {\n    //fetch request goes here:\n    const res = await fetch('http://localhost:3001/todos', {\n      method:'POST',\n      headers: {\n        'Content-Type': 'application/json'\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify({ desc: text, done: false, due: date})\n    }\n    );\n  \n    // currently, after we add a TODO, we must manuallly referesh our page to see the new Todos.\n    // We'll insert the following lines in order to have a an aut-refers\n    // assume the todo is successfully added a(and dont do any errro hadnling)\n    fetchTodos(); // this wil fetch them and reflect them ont othe scren\n    setText('');\n  };\n\n    // // deleteAllTodos\n    const deleteAllTodos = async () => {\n      await fetch(`http://localhost:3001/todos`, {\n        method:'DELETE'\n      });\n      fetchTodos();\n    }\n\n    const StartTemplateToDoList = async () => {\n      deleteAllTodos();\n      await fetch(`http://localhost:3001/todos/standardTemplate`, {\n        method:'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      fetchTodos();\n    }\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const items = todos.map(todo => <Item todo={todo} key={todo._id} fetchTodos={fetchTodos}/> )\n  \n  // drop down variables\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n\n  return <div className=\"ui card\">\n  <div className=\"content\">\n    <div className=\"header\">My To-Do List</div>\n    <button className=\"positive ui button\" onClick={deleteAllTodos}>Clear & Start Afresh</button>\n    <button className=\"positive ui button\" onClick={StartTemplateToDoList}>Start Standardized ToDo List</button>\n\n  </div>\n  <div className=\"content\">\n\n    <div className=\"ui relaxed divided list\">\n      {items}\n    </div>\n  </div>\n  <div className=\"extra content\">\n    <div className=\"fluid ui action input\">\n          <div class=\"ui cards\">\n            <div class=\"card\">\n          \n              <list style={{color:\"blue\"}}>\n                <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Task Name\"/>\n                <br></br>\n                <input type=\"date\" value={date} onChange={(e) => setDate(e.target.value)} /> \n                <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n                  <DropdownToggle caret>\n                    Task Category\n                    </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem>Some Action</DropdownItem>\n                    <DropdownItem text>Dropdown Item Text</DropdownItem>\n                    <DropdownItem>Quo Action</DropdownItem>\n                  </DropdownMenu>\n                </Dropdown>\n              </list>\n              </div>\n            {/* </div> */}\n            \n          </div>\n\n      <button className=\"ui teal right labeled icon button\" onClick={addTodo}>\n        <i className=\"plus icon\"></i>\n        add\n      </button>\n    </div>\n  </div>\n</div>\n\n\n\n};\n\nconst Item = (props) => {\n  const {done , desc, _id} = props.todo;\n  const deleteTodo = async () => {\n    await fetch(`http://localhost:3001/todos/${_id}`, {\n      method:'DELETE'\n    }\n    );\n    props.fetchTodos();\n  }\n\n  const toggleDone = async () => {\n    await fetch(`http://localhost:3001/todos/${_id}`, {\n      method:'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ done: !done, desc})\n    });\n\n    props.fetchTodos();\n  };\n\n\n  return <div className='item'>\n    {\n      done ? \n      <i className=\"left floated green check square outline icon\" onClick={toggleDone}></i> : \n      <i className=\"left floated square outline icon\" onClick={toggleDone}></i>\n    }\n    {\n      done ?\n      <del > {desc}</del> :  <p > {desc}</p>\n    }\n    {done}\n    <i className=\"right floated red trash icon\" onClick={deleteTodo}></i>\n\n  </div>\n}\n\n//  ------------------------------------------------ ------------------------------------------------\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}